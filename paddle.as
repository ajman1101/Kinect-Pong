package {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.TransformGestureEvent;	import org.tuio.TouchEvent;	import flash.geom.Point;	public class paddle extends MovieClip	{		public var startX:Number;		public var center:Point;		public function paddle(aX:Number, aY:Number)		{			this.x = aX;			this.y = aY;			startX = this.x;			center = new Point(0,this.height / 2);			addEventListener(Event.ENTER_FRAME, onEnter);			this.addEventListener(TransformGestureEvent.GESTURE_PAN, handleDrag);			//this.addEventListener(TransformGestureEvent.GESTURE_ZOOM, handleScale);			//this.addEventListener(TransformGestureEvent.GESTURE_ROTATE, handleRotate);			//this.addEventListener(TouchEvent.TOUCH_DOWN, handleDown);			//this.addEventListener(TouchEvent.TOUCH_UP, handleUp);		}		public function onEnter(e:Event)		{			if (this != null && this.parent != null)			{				if (this.x != startX)				{					this.x = startX;				}				if (this.y <= 25)				{					this.y = 24;				}				if (this.y >= (stage.stageHeight - 25))				{					this.y = stage.stageHeight - 24;				}			}		}		/*private function handleScale(e:TransformGestureEvent):void		{		this.scaleX +=  e.scaleX;		this.scaleY +=  e.scaleY;		}				private function handleRotate(e:TransformGestureEvent):void		{		this.rotation +=  e.rotation;		}*/		private function handleDrag(e:TransformGestureEvent):void		{			this.x +=  e.offsetX;			this.y +=  e.offsetY;		}		/*private function handleDown(e:TouchEvent):void		{		if (curID == -1)		{		stage.setChildIndex(this, stage.numChildren - 1);		this.curID = e.tuioContainer.sessionID;		stage.addEventListener(TouchEvent.TOUCH_UP, handleUp);		}		}				private function handleUp(e:TouchEvent):void		{		if (e.tuioContainer.sessionID == this.curID)		{		this.curID = -1;		stage.removeEventListener(TouchEvent.TOUCH_UP, handleUp);		}		}		*/		public function remove()		{			if (this != null && this.parent != null)			{				this.parent.removeChild(this);			}		}	}}