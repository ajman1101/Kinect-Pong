package {	import flash.display.*;	import flash.events.Event;	import flash.text.*;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import org.tuio.gestures.DragGesture;	import org.tuio.gestures.GestureManager;	import org.tuio.connectors.*;	import org.tuio.*;	import org.tuio.debug.*;	public class document extends MovieClip	{		public var tDbg:TuioDebug;		public var ball:myball;		public var player1:paddle = new paddle(50,240);		public var player2:paddle = new paddle(590,240);		public var count1:Number = 0;		public var count2:Number = 0;		public var score1:TextField = new TextField();		public var score2:TextField = new TextField();		public var score_format:TextFormat = new TextFormat();		public var whoWins:TextField = new TextField();		public var win_format:TextFormat = new TextFormat();				public function document()		{			if (stage)			{				init();			}			else			{				addEventListener(Event.ADDED_TO_STAGE, init);			}			addEventListener(Event.ENTER_FRAME, onEnter);			stage.addEventListener(KeyboardEvent.KEY_DOWN, onDown);		}		public function init(e:Event = null):void		{			var tc:TuioClient = new TuioClient(new LCConnector());			var tm:GestureManager = GestureManager.init(stage,tc);			GestureManager.addGesture(new DragGesture());			tDbg = TuioDebug.init(stage);			tc.addListener(tDbg);						addChild(player1);			addChild(player2);			player2.rotation = 180;						score_format.font = "Impact";			score_format.size = 24;			score1.x = 90;			score2.x = 540 - 75;			score1.y = score2.y = 425;			score1.width = score2.width = 150;			score1.defaultTextFormat = score2.defaultTextFormat = score_format;			addChild(score1);			addChild(score2);						win_format.font = "Impact";			win_format.size = 48;			whoWins.x = stage.stageWidth/2 - 150;			whoWins.y = stage.stageHeight/2 - 50;			whoWins.width = 300;			whoWins.defaultTextFormat = win_format;		}		public function onEnter(e:Event)		{			score1.text = "Player 1: " + count1.toString();			score2.text = "Player 2: " + count2.toString();						if (currentFrame == 90)			{				ball = new myball(320,240);				addChild(ball);				ball.ballReset();				ball.speedX = ball.speedXInit;				ball.speedY = ball.speedYInit;				checkDirection();			}			else if (currentFrame == 91)			{				//Ball bouncing off top/bottom walls				if (ball.y - ball.height / 2 + ball.speedY < 0 || ball.y + ball.height/ 2 > stage.stageHeight)				{					ball.speedY =-  ball.speedY;				}				//Ball bouncing off the paddles				if (ball.hitTestObject(player1.dickholes) || ball.hitTestObject(player2.dickholes))				{					ball.speedX =- ball.speedX;					if (ball.speedX < ball.maxSpeed && ball.speedX > 0)					{						ball.speedX +=  ball.accel;					}					if (ball.speedX >  -  ball.maxSpeed && ball.speedX < 0)					{						ball.speedX -=  ball.accel;					}					//Tweaking Angle each bounce					if (ball.y > player1.center.y || ball.y > player2.center.y) 					{						if (ball.speedY <= 0)						{							ball.speedY +=  Math.random()*1.5;						}						if (ball.speedY > 0)						{							ball.speedY -=  Math.random()*1.5;						}					}					if (ball.y < player2.center.y || ball.y < player2.center.y)					{						if (ball.speedY <= 0)						{							ball.speedY -=  Math.random()*1.5;						}						if (ball.speedY > 0)						{							ball.speedY +=  Math.random()*1.5;						}					}				}				/*//Glitch fixing, paddle 1 & 2				if (ball.x + ball.width/2 <= player1.dickholes.width)				{					if (ball.hitTestObject(player1.dickholes))					{						ball.speedX = -ball.speedX;						ball.speedY = -ball.speedY;					}				}				if (ball.x + ball.width/2 <= player2.dickholes.width)				{					if (ball.hitTestObject(player2.dickholes))					{						ball.speedX = -ball.speedX;						ball.speedY = -ball.speedY;					}				}*/				//Scoring points				if (ball.x - ball.width/2 <= 40)				{					count2++;					score2.text = "Player 2: " + count2.toString();					ball.remove();					gotoAndPlay(1);				}				if (ball.x + ball.width/2 >= (stage.stageWidth - 40))				{					count1++;					score1.text = "Player 1: " + count1.toString();					ball.remove();					gotoAndPlay(1);				}				checkWin();			}		}		public function checkWin()		{			if (count1 == 5 || count2 == 5)			{				ball.remove();				player1.remove();				player2.remove();				gotoAndStop(92);				addChild(whoWins);				if (count1 == 5)				{					whoWins.text = "Player 1 Wins!";				}				else if (count2 == 5)				{					whoWins.text = "Player 2 Wins!";				}			}		}		public function checkDirection()		{			if (count1 > count2)			{				if (ball.speedX < 1)				{					ball.speedX = -ball.speedX;				}				trace("moving right");			}			else if (count2 > count1)			{				if (ball.speedX > 1)				{					ball.speedX = -ball.speedX;				}				trace("moving left");			}			else 			{				var num:int = Math.random();				var direc:int;				if (num > .5)				{					direc = 1;				}				if (num <=.5)				{					direc = -1;				}				ball.speedX = ball.speedX * direc;			}		}		public function onDown(e:KeyboardEvent)		{			if (e.keyCode == Keyboard.SPACE)			{				ball.remove();				gotoAndPlay(1);				count1 = 0;				count2 = 0;				if (currentFrame==92)				{					addChild(player1);					addChild(player2);					stage.removeChild(whoWins);				}			}		}	}}